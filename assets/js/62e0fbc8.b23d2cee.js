"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[397],{4213:(t,n,e)=>{e.d(n,{R:()=>s,x:()=>o});var i=e(6672);const r={},l=i.createContext(r);function s(t){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),i.createElement(l.Provider,{value:n},t.children)}},5336:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868","title":"BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868","description":"\u63cf\u8ff0","source":"@site/docs/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868.md","sourceDirName":"\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868","slug":"/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868","permalink":"/docs/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868.md","tags":[],"version":"current","frontMatter":{"title":"BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868"},"sidebar":"tutorialSidebar","previous":{"title":"BM4 \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868","permalink":"/docs/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM4 \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868"},"next":{"title":"BM6 \u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af","permalink":"/docs/\u5f00\u53d1/ACM/\u725b\u5ba2\u9762\u8bd5Top100/\u94fe\u8868/BM6 \u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af"}}');var r=e(3420),l=e(4213);const s={title:"BM5 \u5408\u5e76k\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868"},o=void 0,d={},a=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:2},{value:"\u601d\u8003",id:"\u601d\u8003",level:2},{value:"\u5f52\u5e76\u6392\u5e8f",id:"\u5f52\u5e76\u6392\u5e8f",level:3},{value:"\u5806\u6392\u5e8f",id:"\u5806\u6392\u5e8f",level:3}];function p(t){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u5408\u5e76 k \u4e2a\u5347\u5e8f\u7684\u94fe\u8868\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3a\u4e00\u4e2a\u5347\u5e8f\u7684\u94fe\u8868\u8fd4\u56de\u5176\u5934\u8282\u70b9\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u6570\u636e\u8303\u56f4\uff1a\u8282\u70b9\u603b\u65700\u2264n\u226450000\u2264n\u22645000\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684val\u6ee1\u8db3val\u2223< =1000\u2223val\u2223< =1000\n\u8981\u6c42\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(nlogn)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u8f93\u5165\uff1a\n[{1,2,3},{4,5,6,7}]\n\u8fd4\u56de\u503c\uff1a\n{1,2,3,4,5,6,7}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u601d\u8003",children:"\u601d\u8003"}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u91cc\u6d89\u53ca\u591a\u4e2a\u94fe\u8868\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an",(0,r.jsx)(n.code,{children:"*"}),"logn\uff0c\u5e94\u8003\u8651\u4f7f\u7528\u7279\u5b9a\u6392\u5e8f\u7b97\u6cd5\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"\u5f52\u5e76\u6392\u5e8f",children:"\u5f52\u5e76\u6392\u5e8f"}),"\n",(0,r.jsx)(n.p,{children:"\u6700\u5f00\u59cb\u60f3\u6cd5\u662f\u628a\u94fe\u8868\u8f6c\u5316\u4e3a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u540e\u5728\u8f6c\u5316\u56de\u53bb\uff0c\u7136\u540e\u518d\u76f4\u63a5\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\uff0c\u4f46\u53d1\u73b0\u6700\u540e\u6211\u4eec\u5185\u5b58\u8d85\u9650\u4e86\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func mergeKLists(lists []*ListNode) *ListNode {\n\tif lists == nil {\n\t\treturn nil\n\t}\n\tvar link *ListNode\n\tvar nowNode  *ListNode\n\tsingle := listToLinkList(lists)\n    \n\n\tarrNode := merge(single)\n\tfor _, i := range arrNode {\n        \n\t\ttmpNode:=&ListNode{\n            Val: i,\n        }\n         if link==nil{\n            link=tmpNode\n            nowNode=tmpNode\n        }else{\n           nowNode.Next=tmpNode\n            nowNode=tmpNode\n        }\n        \n\t}\n    if link==nil{\n        link=&ListNode{\n        \n        }\n    }\n\treturn link\n\n}\nfunc listToLinkList(list []*ListNode) []int {\n\t// \u68c0\u67e5 list \u662f\u5426\u4e3a\u7a7a\n\tif len(list) == 0 {\n\t\treturn []int{}\n\t}\n\t// \u627e\u5230\u7b2c\u4e00\u4e2a\u975e nil \u7684\u8282\u70b9\n\tvar preNode *ListNode\n    var prekey int\n\tfor k, v := range list {\n\t\tif v != nil {\n\t\t\tpreNode = v\n            prekey=k\n\t\t\tbreak\n\t\t}\n\t}\n   \n\t// \u5982\u679c\u6ca1\u6709\u627e\u5230\u975e nil \u7684\u8282\u70b9\uff0c\u8fd4\u56de\u7a7a\u5217\u8868\n\tif preNode == nil {\n\t\treturn []int{}\n\t}\n\t// \u627e\u5230\u7b2c\u4e00\u4e2a\u94fe\u8868\u7684\u5c3e\u8282\u70b9\n\ttail := preNode\n\tfor tail.Next != nil {\n\t\ttail = tail.Next\n\t}\n\t// \u8fde\u63a5\u540e\u7eed\u7684\u94fe\u8868\n\tfor _, v := range list[prekey+1:] {\n\t\tif v == nil {\n\t\t\tcontinue\n\t\t}\n\t\ttail.Next = v\n\t\t// \u627e\u5230\u5f53\u524d\u94fe\u8868\u7684\u5c3e\u8282\u70b9\n\t\tfor v.Next != nil {\n\t\t\tv = v.Next\n\n\t\t}\n\t\ttail = v\n\t}\n\n\tvar a []int\n\tcurrent := preNode\n\tfor current != nil {\n\t\ta = append(a, current.Val)\n\t\tcurrent = current.Next\n\t}\n\treturn a\n}\n\nfunc merge(list []int) []int {\n\t//\u7ec8\u6b62\u6761\u4ef6\n\tif len(list) == 1 {\n\t\treturn list\n\t}\n\t//\u9012\n\tleft := len(list) / 2\n\tleftArr := merge(list[:left])\n\trightArr := merge(list[left:])\n\t//\u5f52\n\ti := 0\n\tj := 0\n\tvar arr []int\n\tfor i < len(leftArr) && j < len(rightArr) {\n\t\tif leftArr[i] < rightArr[j] {\n\t\t\tarr = append(arr, leftArr[i])\n\t\t\ti++\n\t\t} else {\n\t\t\tarr = append(arr, rightArr[j])\n\t\t\tj++\n\t\t}\n\t}\n\t// \u5904\u7406\u5de6\u5b50\u6570\u7ec4\u5269\u4f59\u5143\u7d20\n\tfor i < len(leftArr) {\n\t\tarr = append(arr, leftArr[i])\n\t\ti++\n\t}\n\t// \u5904\u7406\u53f3\u5b50\u6570\u7ec4\u5269\u4f59\u5143\u7d20\n\tfor j < len(rightArr) {\n\t\tarr = append(arr, rightArr[j])\n\t\tj++\n\t}\n\n\treturn arr\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u60f3\u4e86\u4e00\u4f1a\u513f\uff0c\u51b3\u5b9a\u8fd8\u662f\u770b\u770b\u7b54\u6848\u3002\n\u4ee3\u7801\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func mergeKLists( lists []*ListNode ) *ListNode {\n    // write code here\n    //\u5148\u5904\u7406\u503c\u60c5\u51b5\n\tif lists ==nil{\n\t\treturn nil\n\t}\n    //\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u5904\u7406\u503c\n\treturn merger(lists, 0, len(lists)-1)\n    \n}\nfunc merger(lists []*ListNode,left int,right int) *ListNode{\n    //\u4f7f\u7528\u9012\u5f52\u5148\u5224\u65ad\u7ec8\u6b62\u6761\u4ef6\n    if left>right{\n\t\t//\u9632\u6b62\u7a7a\u503c\n\t\treturn nil\n\t}else if left==right{\n\t\treturn lists[left]\n\t}\n\t//\u9012\n\tmid:=(left+right)/2\n\tleftNode:=merger(lists, left,mid )\n\trightNode:=merger(lists, mid+1, right)\n\t//\u5f52\n    \n\t//\u5904\u7406\u53ef\u80fd\u7684\u7a7a\u503c\u60c5\u51b5\n\tif leftNode==nil&&rightNode==nil{\n\t\treturn nil\n\t}else if leftNode==nil{\n\t\treturn rightNode\n\t}else if rightNode==nil{\n\t\treturn leftNode\n\t}\n    //\u8fdb\u884c\u5408\u5e76\n\tvar newHeader,tmpLeft,tmpRight,tmpHead *ListNode\n\tnewHeader=&ListNode{\n\t\tVal: 0,\n\t}\n\ttmpHead=newHeader\n    tmpLeft=leftNode\n\ttmpRight=rightNode\n    for tmpLeft!=nil&&tmpRight!=nil{\n\t\tif tmpLeft.Val>tmpRight.Val{\n\t\t\ttmpHead.Next=tmpRight\n\t\t\ttmpHead=tmpHead.Next\n\t\t\ttmpRight=tmpRight.Next\n\t\t}else{\n\t\t\ttmpHead.Next=tmpLeft\n\t\t\ttmpHead=tmpHead.Next\n\t\t\ttmpLeft=tmpLeft.Next\n\t\t}\n\t}\n\tif tmpLeft!=nil{\n\t\ttmpHead.Next=tmpLeft\n\t}else{\n\t\ttmpHead.Next=tmpRight\n\t}\n\tnewHeader=newHeader.Next\n\treturn newHeader\n\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5176\u5b9e\u8fd9\u91cc\u662f\u4f7f\u7528\u5408\u5e76\u6392\u5e8f\u5904\u7406\u7684\u6570\u7ec4\u73af\u8282\uff0c\u540c\u65f6\u8003\u8651\u5230\u4e86\u94fe\u8868\u672c\u8eab\u662f\u5347\u5e8f\u7684\u6761\u4ef6\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u5806\u6392\u5e8f",children:"\u5806\u6392\u5e8f"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\nimport . "nc_tools"\nimport "container/heap"\n/*\n * type ListNode struct{\n *   Val int\n *   Next *ListNode\n * }\n */\n\n/**\n * \u4ee3\u7801\u4e2d\u7684\u7c7b\u540d\u3001\u65b9\u6cd5\u540d\u3001\u53c2\u6570\u540d\u5df2\u7ecf\u6307\u5b9a\uff0c\u8bf7\u52ff\u4fee\u6539\uff0c\u76f4\u63a5\u8fd4\u56de\u65b9\u6cd5\u89c4\u5b9a\u7684\u503c\u5373\u53ef\n *\n * \n * @param lists ListNode\u7c7b\u4e00\u7ef4\u6570\u7ec4 \n * @return ListNode\u7c7b\n*/\ntype linkHead []*ListNode\n//\u5b9e\u73b0\u957f\u5ea6\nfunc (h *linkHead)Len() int{\n\treturn len(*h)\n\n}\n//\u5b9e\u73b0\u6bd4\u8f83\nfunc (h *linkHead)Less(i,j int) bool{\n    return (*h)[i].Val<(*h)[j].Val\n}\n//\u5b9e\u73b0\u4ea4\u6362\nfunc (h *linkHead)Swap(i,j int){\n\t(*h)[i],(*h)[j]=(*h)[j],(*h)[i]\n\n}\n//\u5b9e\u73b0\u5165\u5806\nfunc (h *linkHead)Push(x interface{}){\n     *h=append((*h), x.(*ListNode))\n}\n//\u5b9e\u73b0\u51fa\u5806\nfunc (h *linkHead)Pop()interface{} { \n\tlast:=(*h)[len((*h))-1]\n\t*h=(*h)[:len((*h))-1]\n\treturn last\n}\n\nfunc mergeKLists( lists []*ListNode ) *ListNode {\n\th:=&linkHead{}\n\theap.Init(h)\n    for _,i :=range lists{\n\t\tif i!=nil{\n\t\t\theap.Push(h, i)\n\t\t}\n\t}\n\n    var newLinkHead *ListNode\n\tvar nowNode *ListNode\n    newLinkHead=&ListNode{\n\t\tVal: 0,\n\t}\n    nowNode=newLinkHead\n\tvar tmpNode *ListNode\n\tfor h.Len()>0{\n        tmpNode=heap.Pop(h).(*ListNode)\n\t\tnowNode.Next=tmpNode\n\t\tnowNode=nowNode.Next\n\t\tif tmpNode.Next!=nil{\n\t\t\theap.Push(h , tmpNode.Next)\n\t\t}\n\t}\n\tnowNode.Next=nil\n\tnewLinkHead=newLinkHead.Next\n\treturn newLinkHead\n}\n\n\n'})})]})}function c(t={}){const{wrapper:n}={...(0,l.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}}}]);